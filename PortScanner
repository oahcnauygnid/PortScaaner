import java.io.IOException;
import java.net.Socket;

/*21端口：FTP 文件传输服务
22端口：SSH 端口
23端口：TELNET 终端仿真服务
25端口：SMTP 简单邮件传输服务
53端口：DNS 域名解析服务
80端口：HTTP 超文本传输服务
110端口：POP3 “邮局协议版本3”使用的端口
443端口：HTTPS 加密的超文本传输服务
1433端口：MS SQL*SERVER数据库 默认端口号
1521端口：Oracle数据库服务
1863端口：MSN Messenger的文件传输功能所使用的端口
3306端口：MYSQL 默认端口号
3389端口：Microsoft RDP 微软远程桌面使用的端口
5631端口：Symantec pcAnywhere 远程控制数据传输时使用的端口
5632端口：Symantec pcAnywhere 主控端扫描被控端时使用的端口
5000端口：MS SQL Server使用的端口
8000端口：腾讯QQ*/
public class PortScanner {//PortScanner类—————端口扫描
	int numOfThreads;// 线程数
	int startPort, endPort;// 开始结束
	String host = "127.0.0.1";// 地址
	PortScannerUI ui;// UI界面
	ScanThread scanThreads[];
	int[] knownPort = new int[] { 21, 22, 23, 25, 53, 80, 110, 443, 1433, 1521, 1863, 3306, 3389, 5631, 5632, 5000,
			8000, 10000 };// 常用port
	String[] portService = new String[] { "FTP", "SSH", "TELNET", "SMTP", "DNS", "HTTP", "POP3", "HTTPS",
			"MS SQL*SERVER", "Oracle", "MSN Messenger", "MYSQL", "Microsoft RDP", "Symantec pcAnywhere",
			"Symantec pcAnywhere", "MS SQL Server", "QQ", "" };

	class ScanThread extends Thread {// 线程类
		int threadNum;//线程编号

		public ScanThread(int threadNum) {
			this.threadNum = threadNum;
		}

		public void run() {
			Socket socket;
			for (int port = startPort + threadNum; port <= endPort; port += numOfThreads) {
				try {
					socket = new Socket(host, port);// socket建立连接来检查端口

					String onePortAll = host;
					int i1 = 55 - host.length();
					while (i1-- > 0) {
						onePortAll += " ";
					}
					String portString = "" + port;
					int i2 = 30 - portString.length();
					while (i2-- > 0) {
						portString += " ";
					}
					onePortAll += portString;
					int i = 0;
					for (; knownPort[i] <= 8000; i++) {
						if (knownPort[i] == port) {
							onePortAll += portService[i];
							break;
						}
					}
					ui.textArea_List.append(onePortAll + "\n");// 显示扫描结果
					ui.textArea_Info.append("Port " + port + ": " + portService[i] + " open\n");
					socket.close();
				} catch (IOException e) {
				}
			}
		}
	}

	public void start() {
		for (int i = 0; i < numOfThreads; i++) {
			new ScanThread(i).start();
		}
	}

	public void stop() {
		System.exit(0);
	}
}
